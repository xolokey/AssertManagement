[
  {
    "ContainingType": "AssetManagement.Controllers.AssetController",
    "Method": "GetAll",
    "RelativePath": "api/Asset",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AssetManagement.DTOs.AssetReadDto, AssetManagement, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetController",
    "Method": "Create",
    "RelativePath": "api/Asset",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "AssetManagement.DTOs.AssetCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetController",
    "Method": "GetById",
    "RelativePath": "api/Asset/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetController",
    "Method": "Update",
    "RelativePath": "api/Asset/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "asset",
        "Type": "AssetManagement.Models.Asset",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetController",
    "Method": "Delete",
    "RelativePath": "api/Asset/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetAuditController",
    "Method": "GetAll",
    "RelativePath": "api/AssetAudit",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetAuditController",
    "Method": "Create",
    "RelativePath": "api/AssetAudit",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "AssetManagement.DTOs.AssetAuditCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetAuditController",
    "Method": "GetById",
    "RelativePath": "api/AssetAudit/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetAuditController",
    "Method": "Update",
    "RelativePath": "api/AssetAudit/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "audit",
        "Type": "AssetManagement.Models.AssetAudit",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetAuditController",
    "Method": "Delete",
    "RelativePath": "api/AssetAudit/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetAuditController",
    "Method": "UpdateAuditStatus",
    "RelativePath": "api/AssetAudit/{id}/status",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetAuditController",
    "Method": "TriggerAuditForAll",
    "RelativePath": "api/AssetAudit/TriggerAll",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetCategoryController",
    "Method": "GetAll",
    "RelativePath": "api/AssetCategory",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AssetManagement.DTOs.AssetCategoryReadDto, AssetManagement, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetCategoryController",
    "Method": "Create",
    "RelativePath": "api/AssetCategory",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "AssetManagement.DTOs.AssetCategoryCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetCategoryController",
    "Method": "GetById",
    "RelativePath": "api/AssetCategory/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetCategoryController",
    "Method": "Update",
    "RelativePath": "api/AssetCategory/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "category",
        "Type": "AssetManagement.Models.AssetCategory",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetCategoryController",
    "Method": "Delete",
    "RelativePath": "api/AssetCategory/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetServiceRequestController",
    "Method": "GetAll",
    "RelativePath": "api/AssetServiceRequest",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetServiceRequestController",
    "Method": "Create",
    "RelativePath": "api/AssetServiceRequest",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "AssetManagement.DTOs.AssetServiceRequestCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetServiceRequestController",
    "Method": "GetById",
    "RelativePath": "api/AssetServiceRequest/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetServiceRequestController",
    "Method": "Update",
    "RelativePath": "api/AssetServiceRequest/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "AssetManagement.Models.AssetServiceRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AssetServiceRequestController",
    "Method": "Delete",
    "RelativePath": "api/AssetServiceRequest/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AuthController",
    "Method": "ForgotPassword",
    "RelativePath": "api/Auth/forgot-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "req",
        "Type": "AssetManagement.Controllers.ForgotPasswordRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "AssetManagement.Controllers.LoginRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.AuthController",
    "Method": "ResetPassword",
    "RelativePath": "api/Auth/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "req",
        "Type": "AssetManagement.Controllers.ResetPasswordRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmployeeController",
    "Method": "GetAll",
    "RelativePath": "api/Employee",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AssetManagement.DTOs.EmployeeReadDto, AssetManagement, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EmployeeController",
    "Method": "Create",
    "RelativePath": "api/Employee",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "AssetManagement.DTOs.EmployeeCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmployeeController",
    "Method": "GetById",
    "RelativePath": "api/Employee/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmployeeController",
    "Method": "Update",
    "RelativePath": "api/Employee/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "employee",
        "Type": "AssetManagement.Models.Employee",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "EmployeeController",
    "Method": "Delete",
    "RelativePath": "api/Employee/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.EmployeeAssetAllocationController",
    "Method": "GetAll",
    "RelativePath": "api/EmployeeAssetAllocation",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.EmployeeAssetAllocationController",
    "Method": "Create",
    "RelativePath": "api/EmployeeAssetAllocation",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "AssetManagement.DTOs.EmployeeAssetAllocationCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.EmployeeAssetAllocationController",
    "Method": "GetById",
    "RelativePath": "api/EmployeeAssetAllocation/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.EmployeeAssetAllocationController",
    "Method": "Update",
    "RelativePath": "api/EmployeeAssetAllocation/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "allocation",
        "Type": "AssetManagement.Models.EmployeeAssetAllocation",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.EmployeeAssetAllocationController",
    "Method": "Delete",
    "RelativePath": "api/EmployeeAssetAllocation/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.EmployeeAssetAllocationController",
    "Method": "Approve",
    "RelativePath": "api/EmployeeAssetAllocation/approve",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "AssetManagement.DTOs.AllocationApproveDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.LoginHistoryController",
    "Method": "GetAll",
    "RelativePath": "api/LoginHistory",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.LoginHistoryController",
    "Method": "Create",
    "RelativePath": "api/LoginHistory",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "AssetManagement.DTOs.LoginHistoryCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.LoginHistoryController",
    "Method": "GetById",
    "RelativePath": "api/LoginHistory/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.LoginHistoryController",
    "Method": "Update",
    "RelativePath": "api/LoginHistory/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "login",
        "Type": "AssetManagement.Models.LoginHistory",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.LoginHistoryController",
    "Method": "Delete",
    "RelativePath": "api/LoginHistory/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "AssetManagement.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[AssetManagement.WeatherForecast, AssetManagement, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]